import random

# Initialize the game board as a 4x4 grid of zeros
board = [[0] * 4 for _ in range(4)]

# Helper function to print the board
def print_board():
    for row in board:
        print(row)

# Helper function to check if there are any moves left
def moves_available():
    for i in range(4):
        for j in range(4):
            if board[i][j] == 0:
                return True
            if j > 0 and board[i][j] == board[i][j-1]:
                return True
            if i > 0 and board[i][j] == board[i-1][j]:
                return True
    return False

# Helper function to add a new random tile to the board
def add_random_tile():
    empty_tiles = []
    for i in range(4):
        for j in range(4):
            if board[i][j] == 0:
                empty_tiles.append((i, j))
    if empty_tiles:
        i, j = random.choice(empty_tiles)
        board[i][j] = 2 if random.random() < 0.9 else 4

# Helper function to merge tiles in a row or column
def merge_tiles(line):
    new_line = []
    skip_next = False
    for i in range(len(line)):
        if skip_next:
            skip_next = False
            continue
        if i == len(line) - 1:
            new_line.append(line[i])
        elif line[i] == line[i+1]:
            new_line.append(line[i] * 2)
            skip_next = True
        else:
            new_line.append(line[i])
    while len(new_line) < 4:
        new_line.append(0)
    return new_line

# Helper function to transpose the board (swap rows and columns)
def transpose_board():
    global board
    board = [list(x) for x in zip(*board)]

# Helper function to flip the board horizontally (reverse each row)
def flip_board():
    global board
    board = [row[::-1] for row in board]

# Main game loop
while True:
    print_board()

    # Check for game over
    if not moves_available():
        print("Game over!")
        break

    # Get user input
    direction = input("Enter direction (up/down/left/right): ")

    # Move tiles in the specified direction
    if direction == "up":
        transpose_board()
        board = [merge_tiles(row) for row in board]
        transpose_board()
    elif direction == "down":
        transpose_board()
        flip_board()
        board = [merge_tiles(row) for row in board]
        flip_board()
        transpose_board()
    elif direction == "left":
        board = [merge_tiles(row) for row in board]
    elif direction == "right":
        flip_board()
        board = [merge_tiles(row) for row in board]
        flip_board()

    # Add a new random tile
    add_random_tile()import random

# Initialize the game board as a 4x4 grid of zeros
board = [[0] * 4 for _ in range(4)]

# Helper function to print the board
def print_board():
    for row in board:
        print(row)

# Helper function to check if there are any moves left
def moves_available():
    for i in range(4):
        for j in range(4):
            if board[i][j] == 0:
                return True
            if j > 0 and board[i][j] == board[i][j-1]:
                return True
            if i > 0 and board[i][j] == board[i-1][j]:
                return True
    return False

# Helper function to add a new random tile to the board
def add_random_tile():
    empty_tiles = []
    for i in range(4):
        for j in range(4):
            if board[i][j] == 0:
                empty_tiles.append((i, j))
    if empty_tiles:
        i, j = random.choice(empty_tiles)
        board[i][j] = 2 if random.random() < 0.9 else 4

# Helper function to merge tiles in a row or column
def merge_tiles(line):
    new_line = []
    skip_next = False
    for i in range(len(line)):
        if skip_next:
            skip_next = False
            continue
        if i == len(line) - 1:
            new_line.append(line[i])
        elif line[i] == line[i+1]:
            new_line.append(line[i] * 2)
            skip_next = True
        else:
            new_line.append(line[i])
    while len(new_line) < 4:
        new_line.append(0)
    return new_line

# Helper function to transpose the board (swap rows and columns)
def transpose_board():
    global board
    board = [list(x) for x in zip(*board)]

# Helper function to flip the board horizontally (reverse each row)
def flip_board():
    global board
    board = [row[::-1] for row in board]

# Main game loop
while True:
    print_board()

    # Check for game over
    if not moves_available():
        print("Game over!")
        break

    # Get user input
    direction = input("Enter direction (up/down/left/right): ")

    # Move tiles in the specified direction
    if direction == "up":
        transpose_board()
        board = [merge_tiles(row) for row in board]
        transpose_board()
    elif direction == "down":
        transpose_board()
        flip_board()
        board = [merge_tiles(row) for row in board]
        flip_board()
        transpose_board()
    elif direction == "left":
        board = [merge_tiles(row) for row in board]
    elif direction == "right":
        flip_board()
        board = [merge_tiles(row) for row in board]
        flip_board()

    # Add a new random tile
    add_random_tile()
